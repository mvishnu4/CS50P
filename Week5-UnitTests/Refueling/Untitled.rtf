{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red24\green26\blue30;\red255\green255\blue255;\red194\green11\blue35;
\red11\green34\blue86;\red10\green58\blue158;\red24\green26\blue30;\red11\green34\blue86;}
{\*\expandedcolortbl;;\cssrgb\c12157\c13725\c15686;\cssrgb\c100000\c100000\c100000;\cssrgb\c81176\c13333\c18039;
\cssrgb\c3922\c18824\c41176;\cssrgb\c1961\c31373\c68235;\cssrgb\c12157\c13725\c15686;\cssrgb\c3922\c18824\c41176;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
 a \cf4 =\cf2  \cf5 ""\cf2 \cb1 \
\cf2 \cb3     b \cf4 =\cf2  \cf5 ""\cf2 \cb1 \
\cf2 \cb3     y \cf4 =\cf2  \cf5 ""\cf2 \cb1 \
\cf2 \cb3     i \cf4 =\cf2  \cf6 0\cf2 \cb1 \
\cf2 \cb3     d \cf4 =\cf2  \cf5 ""\cf2 \cb1 \
\cf2 \cb3     \cf4 while\cf2  i \cf4 <\cf2  \cf6 len\cf2 (fraction):\cf2 \cb1 \
\cf2 \cb3         \cf4 if\cf2  fraction[i] \cf4 in\cf2  (\cf5 "/"\cf2 ):\cf2 \cb1 \
\cf2 \cb3             a \cf4 =\cf2  d.strip()\cf2 \cb1 \
\cf2 \cb3             y \cf4 =\cf2  fraction[i]\cf2 \cb1 \
\cf2 \cb3             d \cf4 =\cf2  \cf5 ""\cf2 \cb1 \
\cf2 \cb3             i \cf4 +=\cf2  \cf6 1\cf2 \cb1 \
\cf2 \cb3         \cf4 elif\cf2  fraction[i].isdigit:\cf2 \cb1 \
\cf2 \cb3             d \cf4 +=\cf2  fraction[i]\cf2 \cb1 \
\cf2 \cb3             \cf4 if\cf2  i \cf4 ==\cf2  \cf6 len\cf2 (fraction) \cf4 -\cf2  \cf6 1\cf2 :\cf2 \cb1 \
\cf2 \cb3                 b \cf4 =\cf2  d.strip()\cf2 \cb1 \
\cf2 \cb3             i \cf4 +=\cf2  \cf6 1\cf2 \cb1 \
\
\cf2 \cb3     \cf4 if\cf2  \cf6 len\cf2 (a) \cf4 <\cf2  \cf6 1\cf2  \cf4 or\cf2  \cf6 len\cf2 (b) \cf4 <\cf2  \cf6 1\cf2  \cf4 or\cf2  \cf6 len\cf2 (y) \cf4 <\cf2  \cf6 1\cf2 :\cf2 \cb1 \
\cf2 \cb3         \cf4 raise\cf2  \cf6 ValueError\cf2 \cb1 \
\cf2 \cb3     \cf4 elif\cf2  (\cf4 not\cf2 (\cf6 int\cf2 (a)) \cf4 or\cf2  a \cf4 ==\cf2  \cf5 "0"\cf2 ) \cf4 and\cf2  (\cf4 not\cf2 (\cf6 int\cf2 (b)) \cf4 or\cf2  b \cf4 ==\cf2  \cf5 "0"\cf2 ):\cf2 \cb1 \
\cf2 \cb3         \cf4 raise\cf2  \cf6 ValueError\cf2 \cb1 \
\cf2 \cb3     \cf4 else\cf2 :\cf2 \cb1 \
\cf2 \cb3         x \cf4 =\cf2  \cf6 int\cf2 (a)\cf2 \cb1 \
\cf2 \cb3         y \cf4 =\cf2  \cf5 "/"\cf2 \cb1 \
\cf2 \cb3         z \cf4 =\cf2  \cf6 int\cf2 (b)\cf2 \cb1 \
\
\cf2 \cb3         \cf4 if\cf2  x \cf4 <=\cf2  z:\cf2 \cb1 \
\cf2 \cb3            \cf4 return\cf2  \cf6 int\cf2 ((x\cf4 /\cf2 z)\cf4 *\cf6 100\cf2 )\cf2 \cb1 \
\cf2 \cb3         \cf4 if\cf2  z \cf4 ==\cf2  \cf6 0\cf2 :\cf2 \cb1 \
\cf2 \cb3             \cf4 raise\cf2  \cf6 ZeroDivisionError\cf2 \cb1 \
\cf2 \cb3         \cf4 elif\cf2  x \cf4 >\cf2  z:\cf2 \cb1 \
\cf2 \cb3             \cf4 raise\cf2  \cf6 ValueError\cf2 \cb1 \
\
\cf2 \cb3     \cf4 if\cf2  x \cf4 ==\cf2  \cf6 0\cf2 :\cf2 \cb1 \
\cf2 \cb3         \cf4 return\cf2  \cf6 0\cf2 \cb1 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf7 \outl0\strokewidth0 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3     \cf8 \strokec8 '''split = fraction.split ("/")\cf7 \cb1 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8     if split == "":\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8         raise EOFError\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8     elif len(split) < 2:\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8         raise IndexError\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8     elif split[0].isalpha() or split[1].isalpha():\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8         raise ValueError\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8     elif int(split [1]) == 0:\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8         raise ZeroDivisionError\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8     elif split[1] < split[0]:\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8         raise ValueError\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8     else:\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8         gas = int(split [0]) * 100 / int(split [1])\cf7 \cb1 \strokec7 \
\cf8 \cb3 \strokec8         return gas'''\cf7 \cb1 \strokec7 \
}